/*
    Made by Bryce Guinta

    The program's intent is:
        A == 1, B == 2, C == 3
        -to spin left when sensor A and not C are pressed
        -to spin right when sensor C and not A are pressed
        -to go forward when sensor A and C are pressed
        -to kick when sensor B is pressed

    Output Mapping:
        - A -- Right motor
        - B -- Kicker
        - C -- Left motor
*/

#define KICK_TIME 40 // 1/100 of a second at 7.7 power tested

task main() 
{
    const int WHEELS_SPEED = 2;

    // This actually is more related to torque than speed
    SetSensor(SENSOR_1, SENSOR_TOUCH);
    SetSensor(SENSOR_2, SENSOR_TOUCH);
    SetSensor(SENSOR_3, SENSOR_TOUCH);

    int r_speed;
    int l_speed;

    start movement;
    start kick;
    start sound;
}

task movement() 
{
    while(true)
    {
        spin();
        forward();
    }
}

task kick()
{
    while(true)
    {
        if(SENSOR_2 == 1)
        {
            OnRev(OUT_B);
            Wait(KICK_TIME);
            OnFwd(OUT_B);
            Wait(KICK_TIME);
            Float(KICK_TIME);
        }
    }
}

task sound() 
{
    while(true)
    {
        if(SENSOR_1 == 1) 
        {
            PlaySound(1);
            Wait(50);
        }
        if(SENSOR_2 == 1)
        {
            PlaySound(4);
            Wait(50);
        }
        if(SENSOR_3 == 1)
        {
            PlaySound(1);
            Wait(50);
        }
    }
}


void forward()
{
    if(SENSOR_1 == 1 && SENSOR_3 == 1 )
    {
        l_speed = WHEELS_SPEED;
        r_speed = WHEELS_SPEED;
    }
    else if( SENSOR_1 == 0 && SENSOR_3 == 0 ) // Stop if no input
    {
        l_speed = 0;
        r_speed = 0;
    }
}

void spin()
{
    // Left
    if(SENSOR_1 == 1 && SENSOR_3 == 0)
    {
        l_speed = WHEELS_SPEED;
        r_speed = -WHEELS_SPEED;
        //*robot_wheels_on = 1;
    }
    // Right
    else if(SENSOR_1 == 0 && SENSOR_3 = 1)
    {
        l_speed = -WHEELS_SPEED;
        r_speed = WHEELS_SPEED;
    }
    else if( SENSOR_1 == 0 && SENSOR_3 == 0 ) // Stop if no input
    {
        l_speed = 0;
        r_speed = 0;
    }
}



// Time waiting with motors on based on speed
task run_l_motor()
{
    int time;
    int __l_speed;

    while(true)
    {
        __l_speed = l_speed;
        if(__l_speed > 0)
        {
            OnFwd(OUT_A);
            time = __l_speed;
        }
        else if(__l_speed < 0)
        {
            OnRev(OUT_A);
            time = -__l_speed;     
        }
        Wait(time);
        Off(OUT_A);
    }
}
task run_r_motor()
{
    int time = 0;
    int __r_speed;

    while(true)
    {
        __r_speed = r_speed;
        if(__r_speed > 0)
        {
            OnFwd(OUT_C);
            time = __r_speed;
        }
        else if(__r_speed < 0)
        {
            OnRev(OUT_C);
            time = -__r_speed; // need to wait a positive time
        }
        Wait(time);
        Off(OUT_C);
    }
}
